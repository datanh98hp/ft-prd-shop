# version: '3'
services:
  be:
    container_name: be
    build:
      context: ./be
      dockerfile: ./Dockerfile #path Dockerfile in container
      target: development
    command: npm run start:dev
    env_file:
      - ./be/.env
    depends_on:
      - db
      - adminer
    volumes:
      - ./be:/usr/src/app/
      - /usr/src/app/node_modules
    ports:
      - '8001:8001'
    networks:
      - my_network
  # order-service:
  #   container_name: order-service
  #   build:
  #     context: ./order-service
  #     dockerfile: ./Dockerfile #path Dockerfile in container
  #     target: development
  #   command: npm run start:dev
  #   env_file:
  #     - ./order-service/.env
  #   depends_on:
  #     - db
  #     - adminer
  #   volumes:
  #     - ./order-service:/usr/src/app/
  #     - /usr/src/app/node_modules
   
  #   networks:
  #     - my_network
  # products-service:
  #   container_name: products-service
  #   build:
  #     context: ./products
  #     dockerfile: ./Dockerfile #path Dockerfile in container
  #     target: development
  #   command: npm run start:dev
  #   env_file:
  #     - ./products/.env
  #   depends_on:
  #     - db
  #     - adminer
  #   volumes:
  #     - ./be:/usr/src/app/
  #     - /usr/src/app/node_modules

  #   networks:
  #     - my_network
  # fe:
  #   container_name: fe
    
  #   build: 
  #     context: ./fe
  #     dockerfile: ./dev.Dockerfile #path Dockerfile in container
  #     target: development
  #   environment:
  #     ENV_VARIABLE: ${ENV_VARIABLE}
  #     NEXT_PUBLIC_ENV_VARIABLE: ${NEXT_PUBLIC_ENV_VARIABLE}
  #   command: npm run dev
  #   env_file:
  #     - .env
  #   depends_on:
  #     - be
  #   volumes:

  #     - ./fe:/app

  #     - /fe/tailwind.config.ts
  #     - /fe/postcss.config.js
  #   restart: always
  #   ports:
  #     - '3000:3000'
  #   networks:
  #     - my_network

  redis:
    image: redis
    # restart: always
    ports:
      - '6379:6379'
    volumes:
      - redis:/data
    networks:
      - my_network

  db:
    image: postgres:17.4
    # restart: always
    ports:
      - '5432:5432'
    networks:
      - my_network
    volumes:
      - /var/data/postgres:/data/postgres
    environment:
      - POSTGRES_DB=prd
      - POSTGRES_USER=prd
      - POSTGRES_PASSWORD=prd06021998
  adminer:
    image: adminer:standalone
    # restart: always
    ports:
      - 8080:8080
    networks:
      - my_network
networks:
  my_network:
    external: true
volumes:
  redis: {}
